<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>

    <script>
      window.onload = function () {
        var chart_load_interval = 10000;
        var counter = -1;
        var ph_data = [];
        var yvalues = ['ABNORMAL-3', 'ABNORMAL-2', 'ABNORMAL-1', 'STANDBY', 'NORMAL'];

        $.ajax({
          async: false,
          type: 'GET',
          url: 'dq/select index, target, predicted_result, inserted_time from predict order by index desc limit 100',
          success: function (tole) {
            //callback
            for (i = 0; i < 100; i += 1) {
              // console.log(tole[i]);
              let tole_index = tole[i].index.valueOf();
              let tole_target = tole[i].target.valueOf();
              let tole_predicted_result = tole[i].predicted_result.valueOf();
              var predict_numeric = -1;
              if (tole_predicted_result == 'abnormal-3') {
                predict_numeric = 0;
              } else if (tole_predicted_result == 'abnormal-2') {
                predict_numeric = 1;
              } else if (tole_predicted_result == 'abnormal-1') {
                predict_numeric = 2;
              } else if (tole_predicted_result == 'standby') {
                predict_numeric = 3;
              } else if (tole_predicted_result == 'normal') {
                predict_numeric = 4;
              }

              if (i == 0) {
                counter = tole_index+1;
              }
              
              console.log(predict_numeric);
              ph_data.push({
                x: (tole_index),
                y: (predict_numeric),
                name: (tole_target)
              });
              // console.log(tole_a);
              // console.log(tole_b);
            }
          }
        });

        Highcharts.chart('container', {
          chart: {
            type: 'line',
            animation: Highcharts.svg, // don't animate in old IE
            marginRight: 10,
            zoomType: 'x',
            panning: true,
            panKey: 'shift',
            events: {
              load: function () {

                // set up the updating of the chart each second
                var series = this.series[0];

                setInterval(function () {
                  $.ajax({
                    async: false,
                    type: 'GET',
                    url: "dq/select index, target, predicted_result, inserted_time from predict where index = " + (counter),
                    success: function (data) {
                      //callback
                      console.log("c_counter: " + counter);
                      console.log("length: " + data.length);
                      if (data.length > 0) {
                        data.forEach(function (row) {
                          var predict_numeric = -1;
                          if (row.predicted_result == 'abnormal-3') {
                            predict_numeric = 0;
                          } else if (row.predicted_result == 'abnormal-2') {
                            predict_numeric = 1;
                          } else if (row.predicted_result == 'abnormal-1') {
                            predict_numeric = 2;
                          } else if (row.predicted_result == 'standby') {
                            predict_numeric = 3;
                          } else if (row.predicted_result == 'normal') {
                            predict_numeric = 4;
                          }
                          let x = row.index;
                          let y = predict_numeric;
                          let target = row.target;
                          series.addPoint([x, y, target], true, true);
                        })
                        counter++;
                      }
                    }
                  });

                }, chart_load_interval);
              }
            }
          },

          time: {
            useUTC: false
          },

          title: {
            text: 'Prediction History Result'
          },
          xAxis: {
            tickPixelInterval: 150,
            // type: 'linear',
            type: 'category',
            uniqueNames: false,

          },
          yAxis: {
            title: {
              text: 'Value'
            },
            labels: {
              formatter: function () {
                return yvalues[this.value];
              },
            },	
            plotLines: [{
              value: 0,
              width: 1,
              color: '#808080'
            }]
          },
          tooltip: {
            headerFormat: '<b>{series.name}</b><br/>',
            pointFormat: '{point.name}<br/>{point.y}'
          },
          legend: {
            enabled: false
          },
          exporting: {
            enabled: false
          },
          series: [{
            name: 'Prediction History Result',
            step: 'center',
            data: (function () {
              // generate an array of random data
              return ph_data
            }())
          }]
        });
      }
    </script>
  </head>
  <body>
    <!-- <h1><%= title %></h1>
    <p>Welcome to <%= title %></p> -->
    <div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
  </body>
</html>
